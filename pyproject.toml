[project]
name = "mr-t"
version = "1.0.0"
description = "connect to Eiger, stream to file and UDP"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "asyncudp==0.11.0",
    "culsans==0.7.1",
    "h5py==3.14.0",
    "pyzmq==26.2.0",
    "structlog==24.4.0",
    "typed-argument-parser==1.10.1",
]

[project.scripts]
mr_t_server = "mr_t.server:main"
dummy_client = "mr_t.dummy_client:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.isort]
profile = "black"
force_single_line = "true"

[tool.pyright]
include = ["src"]
typeCheckingMode = "basic"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
enableReachabilityAnalysis = true
reportInvalidStringEscapeSequence = true
reportAssertAlwaysTrue = true
reportInvalidTypeVarUse = false
# deliberately false, since we cannot do anything if this happens
reportMissingTypeStubs = false
reportSelfClsParameterName = true
reportUnsupportedDunderAll = true
reportWildcardImportFromLibrary = true
reportConstantRedefinition = true
reportDeprecated = true
reportDuplicateImport = true
reportFunctionMemberAccess = true
reportImportCycles = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportIncompleteStub = true
reportInconsistentConstructor = true
reportInvalidStubStatement = true
reportMatchNotExhaustive = true
reportMissingParameterType = true
reportMissingTypeArgument = true
reportOverlappingOverload = true
reportPrivateUsage = true
reportTypeCommentUsage = true
reportUnknownLambdaType = true
reportUnknownArgumentType = true
reportUnknownParameterType = true
# Doesn't work _at all_ for libraries
reportUnknownMemberType = false
# Doesn't work _at all_ for libraries
reportUnknownVariableType = false
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryContains = true
reportUnnecessaryIsInstance = true
reportUnusedClass = true
reportUnusedImport = true
reportUnusedFunction = true
reportUnusedVariable = true
reportUnusedExpression = true
reportUntypedBaseClass = true
reportUntypedClassDecorator = true
# this screws up quart route annotations
reportUntypedFunctionDecorator = false
reportUntypedNamedTuple = true

# breaks fastapi
reportCallInDefaultInitializer = false
# Making this work on older Python versions requires a package. Annoying.
reportImplicitOverride = false
reportImplicitStringConcatenation = true
# In principle, a good message. However, it also forces you to call the object super method, which is pointless
reportMissingSuperCall = false

reportPropertyTypeMismatch = true
reportShadowedImports = true
# Works also, but doesn't play along with Tap
reportUninitializedInstanceVariable = false
# This works, but there's no way to ignore something in mypy, but not in pyright
reportUnnecessaryTypeIgnoreComment = false
# Sensible, but false positive waaaaaay to often
reportUnusedCallResult = false
pythonVersion = "3.12"

[dependency-groups]
dev = [
    "ruff>=0.8.6",
]

